import type { Analysis } from "../types";

function ensureLeadingUppercase(s: string): string {
    const m = s.match(/^(\s*["'“‘(\[]*)([a-z])/);
    return m ? m[1] + m[2].toUpperCase() + s.slice(m[0].length) : s;
}

export function analysisToPlainText(analysis: Analysis): string {
    const lines: string[] = [];

    lines.push("AI Summary");
    lines.push("");

    const bullets = (analysis.bullets ?? []).map(ensureLeadingUppercase);

    if (bullets.length) {
        lines.push("Key Points:");
        for (let i = 0; i < bullets.length; i++) {
            lines.push(`${i + 1}. ${bullets[i]}`);
        }
        lines.push("");
    } else {
        lines.push("No key points available.");
        lines.push("");
    }

    lines.push("—");
    lines.push("Generated by AI. This is not legal advice.");
    return lines.join("\n");
}

export function downloadText(filename: string, text: string): void {
    const blob = new Blob([text], { type: "text/plain;charset=utf-8" });
    const url = URL.createObjectURL(blob);
    const anchor = document.createElement("a");
    anchor.href = url;
    anchor.download = filename;
    anchor.click();
    URL.revokeObjectURL(url);
}

export function analysisToMarkdown(analysis: Analysis): string {
    const lines: string[] = [];
    lines.push("# AI Summary", "");

    const bullets = (analysis.bullets ?? []).map(ensureLeadingUppercase);

    if (bullets.length) {
        lines.push("## Key Points");
        for (const b of bullets) lines.push(`- ${b}`);
        lines.push("");
    } else {
        lines.push("_No key points available._", "");
    }

    lines.push("---");
    lines.push("_Generated by AI. Not legal advice._");
    return lines.join("\n");
}
